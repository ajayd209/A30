def is_safe (board, row, col):
    return all( 
        board[i] != col and abs (board[i] - col) != row - i 
        for i in range(row)
    )

def solve_n_queens(board, row, n): 
    if row == n:
        return True
    
    for col in range(n): 
        if is_safe(board, row, col): 
            board [row] = col 
            if solve_n_queens (board, row + 1, n): 
                return True
    
    return False

n = 4 # Change this to the desired board size

board = [-1] * n

if solve_n_queens(board, 0, n): 
    for row in board:
        print(" ".join("Q" if i == row else "." for i in range(n))) 
else:
    print("No solution found.")
